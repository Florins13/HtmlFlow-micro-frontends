quarkus.rest.output-buffer-size=8
quarkus.http.cors.enabled=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE
quarkus.http.host=0.0.0.0
quarkus.http.port=8080
quarkus.http.test-port=8181
#dev config
quarkus.devservices.enabled=true
##config auth
#quarkus.http.auth.basic=true
#quarkus.http.auth.form.enabled=true
#quarkus.http.auth.form.login-page=/login
#quarkus.http.auth.form.landing-page=/bikes
#quarkus.http.auth.form.timeout=PT50M
#quarkus.http.auth.form.error-page=/login/failed
#
##database config
quarkus.datasource.devservices.db-name = quarkus
quarkus.datasource.devservices.port=34261


## To test postgres uncomment the following line
quarkus.datasource.db-kind = postgresql
#quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:34261/quarkus

quarkus.datasource.username = quarkus
quarkus.datasource.password = quarkus
## Uncomment the port line if you want to connect to the db and check tables and data

#quarkus.datasource.db-kind = h2
#quarkus.datasource.jdbc.url = jdbc:h2:mem:quarkus
#quarkus.datasource.jdbc.url = jdbc:h2:tcp://localhost/mem:quarkus

#
## drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.log.sql = false
#
##quarkus.log.category."io.quarkus.qute.nodeResolve".min-level=TRACE
##quarkus.log.category."io.quarkus.qute.nodeResolve".level=TRACE